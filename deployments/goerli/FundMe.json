{
  "address": "0x7f5FefD1871fF215Aaed3b5C61AB293953C9d40c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getaddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf089defe8ec302a92299f1792c5be8db01909ad3e0b3ba8f39f374f934ebaf0d",
  "receipt": {
    "to": null,
    "from": "0xE6B028893ef33547E11873B35115E4d1F5ca7526",
    "contractAddress": "0x7f5FefD1871fF215Aaed3b5C61AB293953C9d40c",
    "transactionIndex": 164,
    "gasUsed": "1035262",
    "logsBloom": "0x
    "blockHash": "0xabc895cd0d30da7a2778afbaf4535bb61f4b2292f2801b3d90f050646ba8901a",
    "transactionHash": "0xf089defe8ec302a92299f1792c5be8db01909ad3e0b3ba8f39f374f934ebaf0d",
    "logs": [],
    "blockNumber": 8653234,
    "cumulativeGasUsed": "28337923",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "e40f73e4041eec8d81c5caf56758fdaa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getaddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n     function cheaperWithraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getaddressToAmountFunded(address funder) public view returns (uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\n        return s_priceFeed; \\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x9159f104a84144020a0cb85e311586af85828d2e6ed33b2b83936666c00ac590\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xfd2cfd63e8ffd5b71bedf9021381e58fc19065c3d5ded28242d615fbadd6372f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012e2380380620012e2833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61115c6200018660003960008181610307015281816104e9015281816105c90152610860015261115c6000f3fe60806040526004361061007f5760003560e01c8063832b1d2c1161004e578063832b1d2c1461012e578063893d20e81461016b5780639e87a5cd14610196578063b60d4288146101c15761008e565b806338bc05a8146100985780633a7b6c74146100af5780633ccfd60b146100ec5780636b69a592146101035761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610305565b005b3480156100bb57600080fd5b506100d660048036038101906100d19190610a6c565b61057f565b6040516100e39190610ada565b60405180910390f35b3480156100f857600080fd5b506101016105c7565b005b34801561010f57600080fd5b50610118610807565b6040516101259190610b04565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190610b4b565b610814565b6040516101629190610b04565b60405180910390f35b34801561017757600080fd5b5061018061085c565b60405161018d9190610ada565b60405180910390f35b3480156101a257600080fd5b506101ab610884565b6040516101b89190610bd7565b60405180910390f35b6101c96101cb565b005b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ae90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c4f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610c9e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561040e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103c4575b5050505050905060005b815181101561049857600082828151811061043657610435610cf4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049090610d23565b915050610418565b50600067ffffffffffffffff8111156104b4576104b3610d6c565b5b6040519080825280602002602001820160405280156104e25781602001602082028036833780820191505090505b50905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161052b90610dcc565b60006040518083038185875af1925050503d8060008114610568576040519150601f19603f3d011682016040523d82523d6000602084013e61056d565b606091505b505090508061057b57600080fd5b5050565b60006001828154811061059557610594610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106f75760006001828154811061067257610671610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106ef90610d23565b91505061064f565b50600067ffffffffffffffff81111561071357610712610d6c565b5b6040519080825280602002602001820160405280156107415781602001602082028036833780820191505090505b506001908051906020019061075792919061098a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161077e90610dcc565b60006040518083038185875af1925050503d80600081146107bb576040519150601f19603f3d011682016040523d82523d6000602084013e6107c0565b606091505b5050905080610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90610e2d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806108ba836108ea565b90506000670de0b6b3a764000085836108d39190610e4d565b6108dd9190610ed6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093357600080fd5b505afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b9190610f94565b5050509150506402540be40081610982919061100f565b915050919050565b828054828255906000526020600020908101928215610a03579160200282015b82811115610a025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109aa565b5b509050610a109190610a14565b5090565b5b80821115610a2d576000816000905550600101610a15565b5090565b600080fd5b6000819050919050565b610a4981610a36565b8114610a5457600080fd5b50565b600081359050610a6681610a40565b92915050565b600060208284031215610a8257610a81610a31565b5b6000610a9084828501610a57565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac482610a99565b9050919050565b610ad481610ab9565b82525050565b6000602082019050610aef6000830184610acb565b92915050565b610afe81610a36565b82525050565b6000602082019050610b196000830184610af5565b92915050565b610b2881610ab9565b8114610b3357600080fd5b50565b600081359050610b4581610b1f565b92915050565b600060208284031215610b6157610b60610a31565b5b6000610b6f84828501610b36565b91505092915050565b6000819050919050565b6000610b9d610b98610b9384610a99565b610b78565b610a99565b9050919050565b6000610baf82610b82565b9050919050565b6000610bc182610ba4565b9050919050565b610bd181610bb6565b82525050565b6000602082019050610bec6000830184610bc8565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c39601b83610bf2565b9150610c4482610c03565b602082019050919050565b60006020820190508181036000830152610c6881610c2c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca982610a36565b9150610cb483610a36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce957610ce8610c6f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2e82610a36565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6157610d60610c6f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db6600083610d9b565b9150610dc182610da6565b600082019050919050565b6000610dd782610da9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e17600b83610bf2565b9150610e2282610de1565b602082019050919050565b60006020820190508181036000830152610e4681610e0a565b9050919050565b6000610e5882610a36565b9150610e6383610a36565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9c57610e9b610c6f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee182610a36565b9150610eec83610a36565b925082610efc57610efb610ea7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2681610f07565b8114610f3157600080fd5b50565b600081519050610f4381610f1d565b92915050565b6000819050919050565b610f5c81610f49565b8114610f6757600080fd5b50565b600081519050610f7981610f53565b92915050565b600081519050610f8e81610a40565b92915050565b600080600080600060a08688031215610fb057610faf610a31565b5b6000610fbe88828901610f34565b9550506020610fcf88828901610f6a565b9450506040610fe088828901610f7f565b9350506060610ff188828901610f7f565b925050608061100288828901610f34565b9150509295509295909350565b600061101a82610f49565b915061102583610f49565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106457611063610c6f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110a1576110a0610c6f565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110de576110dd610c6f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111b5761111a610c6f565b5b82820290509291505056fea26469706673582212206f0f1dda39f64ab53fa4222cf59ce112ecb1de31383edfd59f6c29a150b1723864736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063832b1d2c1161004e578063832b1d2c1461012e578063893d20e81461016b5780639e87a5cd14610196578063b60d4288146101c15761008e565b806338bc05a8146100985780633a7b6c74146100af5780633ccfd60b146100ec5780636b69a592146101035761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610305565b005b3480156100bb57600080fd5b506100d660048036038101906100d19190610a6c565b61057f565b6040516100e39190610ada565b60405180910390f35b3480156100f857600080fd5b506101016105c7565b005b34801561010f57600080fd5b50610118610807565b6040516101259190610b04565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190610b4b565b610814565b6040516101629190610b04565b60405180910390f35b34801561017757600080fd5b5061018061085c565b60405161018d9190610ada565b60405180910390f35b3480156101a257600080fd5b506101ab610884565b6040516101b89190610bd7565b60405180910390f35b6101c96101cb565b005b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ae90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c4f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610c9e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561040e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103c4575b5050505050905060005b815181101561049857600082828151811061043657610435610cf4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049090610d23565b915050610418565b50600067ffffffffffffffff8111156104b4576104b3610d6c565b5b6040519080825280602002602001820160405280156104e25781602001602082028036833780820191505090505b50905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161052b90610dcc565b60006040518083038185875af1925050503d8060008114610568576040519150601f19603f3d011682016040523d82523d6000602084013e61056d565b606091505b505090508061057b57600080fd5b5050565b60006001828154811061059557610594610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106f75760006001828154811061067257610671610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106ef90610d23565b91505061064f565b50600067ffffffffffffffff81111561071357610712610d6c565b5b6040519080825280602002602001820160405280156107415781602001602082028036833780820191505090505b506001908051906020019061075792919061098a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161077e90610dcc565b60006040518083038185875af1925050503d80600081146107bb576040519150601f19603f3d011682016040523d82523d6000602084013e6107c0565b606091505b5050905080610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90610e2d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806108ba836108ea565b90506000670de0b6b3a764000085836108d39190610e4d565b6108dd9190610ed6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093357600080fd5b505afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b9190610f94565b5050509150506402540be40081610982919061100f565b915050919050565b828054828255906000526020600020908101928215610a03579160200282015b82811115610a025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109aa565b5b509050610a109190610a14565b5090565b5b80821115610a2d576000816000905550600101610a15565b5090565b600080fd5b6000819050919050565b610a4981610a36565b8114610a5457600080fd5b50565b600081359050610a6681610a40565b92915050565b600060208284031215610a8257610a81610a31565b5b6000610a9084828501610a57565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac482610a99565b9050919050565b610ad481610ab9565b82525050565b6000602082019050610aef6000830184610acb565b92915050565b610afe81610a36565b82525050565b6000602082019050610b196000830184610af5565b92915050565b610b2881610ab9565b8114610b3357600080fd5b50565b600081359050610b4581610b1f565b92915050565b600060208284031215610b6157610b60610a31565b5b6000610b6f84828501610b36565b91505092915050565b6000819050919050565b6000610b9d610b98610b9384610a99565b610b78565b610a99565b9050919050565b6000610baf82610b82565b9050919050565b6000610bc182610ba4565b9050919050565b610bd181610bb6565b82525050565b6000602082019050610bec6000830184610bc8565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c39601b83610bf2565b9150610c4482610c03565b602082019050919050565b60006020820190508181036000830152610c6881610c2c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca982610a36565b9150610cb483610a36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce957610ce8610c6f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2e82610a36565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6157610d60610c6f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db6600083610d9b565b9150610dc182610da6565b600082019050919050565b6000610dd782610da9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e17600b83610bf2565b9150610e2282610de1565b602082019050919050565b60006020820190508181036000830152610e4681610e0a565b9050919050565b6000610e5882610a36565b9150610e6383610a36565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9c57610e9b610c6f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee182610a36565b9150610eec83610a36565b925082610efc57610efb610ea7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2681610f07565b8114610f3157600080fd5b50565b600081519050610f4381610f1d565b92915050565b6000819050919050565b610f5c81610f49565b8114610f6757600080fd5b50565b600081519050610f7981610f53565b92915050565b600081519050610f8e81610a40565b92915050565b600080600080600060a08688031215610fb057610faf610a31565b5b6000610fbe88828901610f34565b9550506020610fcf88828901610f6a565b9450506040610fe088828901610f7f565b9350506060610ff188828901610f7f565b925050608061100288828901610f34565b9150509295509295909350565b600061101a82610f49565b915061102583610f49565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106457611063610c6f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110a1576110a0610c6f565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110de576110dd610c6f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111b5761111a610c6f565b5b82820290509291505056fea26469706673582212206f0f1dda39f64ab53fa4222cf59ce112ecb1de31383edfd59f6c29a150b1723864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}